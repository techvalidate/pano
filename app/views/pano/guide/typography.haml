:ruby
  @page_title = 'Typography'
  @nav        = :ui
  @subnav     = :typography

= box 'Headings and Paragraphs' do
  %p There are 6 heading sizes, in decreasing size, from H1 - H6. Use p tags for paragraphs.

  = haml_example do
    :plain
      %h1 This is a H1 tag
      %h2 This is a H2 tag
      %h3 This is a H3 tag
      %h4 This is a H4 tag
      %h5 This is a H5 tag
      %h6 This is a H6 tag
      %p This is a paragraph -- use this for body text.

= box 'CSS Classes for Headings' do
  %p
    You can make a p tag or another heading masquerade as another by using css classes named after each heading.
    For example, to make a h4 look like a h2, do this:
  = haml_example do
    :plain
      %h4.h2 This h4 looks like a h2

= box 'Page Titles' do
  %p Usually, the only H1 tag on the page should be the page title.
  %p The page title is almost always set at the top of a view file with the title() helper method, like so:
  .styleguide-example
    .code-example
      :plain
        = title 'Page Title Here'

= box 'Spacing and Alignment' do
  %h5 Spacing
  %p
    By default, headings and paragraphs have top margin of 24px and no bottom margin.
    As a general rule, is up to each element to decide how far it should be spaced from the content preceding it.
  %p first-child headings and p tags have 0 top margin.
  %p When you need closer spacing between a piece of text and the preceding content, use .closer
  = haml_example do
    :plain
      %h4 I am a first-child element, so I have no top margin
      %p.closer I have the .closer class so I have less top margin than normal
      %p I have normal top margin

  %h5 Text Alignment
  %p there are utility classes for text alignment, vertical alignment, nowrap, and indenting
  = haml_example do
    :plain
      %p.text-right right-aligned text
      %p.text-left left-aligned text
      %p.text-center center-aligned text
      %p.align-top vertical-align top
      %p.align-middle vertical-align middle
      %p.nowrap white-space: nowrap
      %p.indented indented 32px

= box 'Text Sizes' do
  %p In addition to sizing text by using headings, you can use css classes.
  = haml_example do
    :plain
      %p.huge I am a p tag with the .huge class
      %p.larger I am a p tag with the .larger class
      %h2.normal-size I am a H2 tag with the .normal-size class
      %p.small I am a small p tag with the .small class
      %p.tiny I am a very small p tag with the .tiny class

= box 'Weights' do
  = haml_example do
    :plain
      %p.normal-weight I am a p tag with the .normal-weight class
      %p.thin I am a p tag with the .thin class
      %p.semibold I am a p tag with the .semibold class
      %p.strong I am a p tag with the .strong class
      %p
        %strong I am a strong tag inside a p
      %p.uppercase I am a p tag with the .uppercase class

= box 'Intro and Note text' do
  %h5 Intro text
  %p
    It's common to want to have a larger introductory paragraph that doesn't quite match our heading styles.
    In this case, you can use the .intro class.
  = haml_example do
    :plain
      %p.intro I am an intro paragraph
  %h5 Note text
  %p
    It's also common to have de-emphasized text. Use .note for this.
  = haml_example do
    :plain
      %p.intro I am an some note text

= box 'Misc' do
  %h5 Italics
  = haml_example do
    :plain
      %em I am in italics

  %h5 Blockquotes
  = haml_example do
    :plain
      %blockquote
        %p I am a blockquote. Lorem Ipsum dolor sit amet.

  %h5 Trademark symbols
  = haml_example do
    :plain
      %p do trademarks with #{trademark} and circle-r (registered trademark) with #{circle_r}.
