// =========================================================
// Grid System
//
// Put all columns in a .grid element (unless they're
// just table cells, then the .grid element is unnecessary).
// By default, grids don't have outer gutters. If you want
// outer gutters, apply .outer-gutters to your grid.
//
// Columns: .col-1...col-12 to make columns 1-12 units wide.
//
// =========================================================

// =========================================================
// functions and mixins for defining grids
// =========================================================

// $totalColumns: 12


// use this to define a column grid

=columnGrid($gutterWidth, $totalColumns: 12)
  +clearfix

  @for $i from 1 through ($totalColumns - 1)

    .col-#{$i}
      +column($i, $gutterWidth, $totalColumns)

    .shift-#{$i}
      +shiftColumns($i, $gutterWidth, $totalColumns)

  &.outer-gutters
    margin-left: $gutterWidth
    margin-right: $gutterWidth

// utility functions and mixins for the columnGrid mixin

@function columnRatio($columnUnits, $totalColumns)
  @return $columnUnits / $totalColumns

@function gutterAdjustment($columnUnits, $gutterWidth, $totalColumns)
  @return $gutterWidth - ($gutterWidth * columnRatio($columnUnits, $totalColumns))

@function columnWidth($columnUnits, $gutterWidth, $totalColumns)
  @return unquote("#{percentage(columnRatio($columnUnits, $totalColumns))} - #{gutterAdjustment($columnUnits, $gutterWidth, $totalColumns)}")

=column($columnUnits, $gutterWidth, $totalColumns)
  float: left
  display: block
  width: calc(#{columnWidth($columnUnits, $gutterWidth, $totalColumns)})
  margin-right: $gutterWidth
  &:last-child
    margin-right: 0

=shiftColumns($columnUnits, $gutterWidth, $totalColumns)
  margin-left: calc(#{percentage(columnRatio($columnUnits, $totalColumns))} + #{$gutterWidth - gutterAdjustment($columnUnits, $gutterWidth, $totalColumns)})


// =========================================================
// grids with different width gutters (16px is default)
// =========================================================

.grid
  +columnGrid(16px)

  &.g8
    +columnGrid(8px)

  &.g32
    +columnGrid(32px)

  &.g48
    +columnGrid(48px)

  &.g64
    +columnGrid(64px)

// =========================================================
// Responsive Columns
//
// Apply these classes to .col-x elements. They simply
// become full-width on mobile or tablet screens.
// =========================================================

.grid

  +mobile
    .stack-on-mobile
      float: none
      width: 100%
      margin-left: 0
    .stack-on-mobile + .stack-on-mobile
      margin-top: 32px

  +tablet
    .stack-on-tablet
      float: none
      width: 100%
      margin-left: 0
    .stack-on-tablet + .stack-on-tablet
      margin-top: 32px

// =========================================================
// Tables
//
// Grid-aligned table cells 1-12 units wide. no gutters.
// =========================================================

table.grid
  width: 100%
  @for $i from 1 through 11
    .col-#{$i}
      float: none
      display: table-cell
      margin: 0
      width: columnRatio($i, 12) * 100%
